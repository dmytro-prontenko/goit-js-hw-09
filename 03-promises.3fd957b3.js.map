{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,kBAAmBL,SAASC,cAAc,oBAG5CH,EAAKC,KAAKO,iBAAiB,UAE3B,SAAsBC,G,kBAKlB,IAAIC,EACFC,OAAOX,EAAKI,MAAMQ,OAASD,OAAOX,EAAKK,KAAKO,QAAUC,EAAI,GAC5DC,YAAW,WAcf,IAAuBC,EAAUX,GAAVW,EAbHF,EAaaT,EAbVM,EAcCM,KAAKC,SAAW,GAG7B,IAAIC,QAAQC,QAAQ,CAAEJ,WAAUX,WAGhC,IAAIc,QAAQE,OAAO,CAAEL,WAAUX,YAnBjCiB,MAAK,SAAAC,G,IAAGP,EAAQO,EAARP,SAAUX,EAAKkB,EAALlB,M,OACjBmB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAwCC,OAAfX,EAAS,QAAYW,OAANtB,G,IAG3CuB,OAAM,SAAAL,G,IAAGP,EAAQO,EAARP,SAAUX,EAAKkB,EAALlB,M,OAClBmB,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANtB,G,MAEhEM,E,EAhBCJ,EAASK,OAAOX,EAAKM,OAAOM,OAClCiB,QAAQC,IAAIrB,EAAMsB,eAClBtB,EAAMuB,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAK3B,EAAQ2B,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  const amount = Number(refs.amount.value);\n  console.log(event.currentTarget);\n  event.preventDefault();\n  for (let i = 1; i <= amount; i++) {\n    let totalDelay =\n      Number(refs.delay.value) + Number(refs.step.value) * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay)\n        .then(({ position, delay }) =>\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}`\n          )\n        )\n        .catch(({ position, delay }) =>\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}`)\n        );\n    }, totalDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise(resolve({ position, delay }));\n  } else {\n    // Reject\n    return new Promise(reject({ position, delay }));\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","createPromisesBtn","addEventListener","event","totalDelay","Number","value","i","setTimeout","position","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","console","log","currentTarget","preventDefault","i1","_loop"],"version":3,"file":"03-promises.3fd957b3.js.map"}