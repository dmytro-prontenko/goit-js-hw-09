{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,kBAAmBL,SAASC,cAAc,oBA0B5C,SAASK,EAAcC,EAAUL,GAC/B,MAAMM,EAAgBC,KAAKC,SAAW,GAEtC,OACS,IAAIC,QADTH,EACiBI,QAAQ,C,SAAEL,E,MAAUL,IAGpBW,OAAO,C,SAAEN,E,MAAUL,I,CA9B1CJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpB,MAAMX,EAASY,OAAOlB,EAAKM,OAAOa,OAClCC,QAAQC,IAAIJ,EAAMK,eAClBL,EAAMM,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,IAAK,CAChC,IAAIC,EACFP,OAAOlB,EAAKI,MAAMe,OAASD,OAAOlB,EAAKK,KAAKc,QAAUK,EAAI,GAC5DE,YAAW,KACTlB,EAAcgB,EAAGC,GACdE,MAAK,EAAClB,SAAEA,EAAQL,MAAEA,KACjBwB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBrB,QAAiBL,OACrC2B,OAEJ,EAAOtB,WAAUL,WAChBwB,EAAA9B,GAAQ+B,OAACG,QAAO,sBAASvB,QAA8BL,MAAW,GAErEqB,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  const amount = Number(refs.amount.value);\n  console.log(event.currentTarget);\n  event.preventDefault();\n  for (let i = 1; i <= amount; i++) {\n    let totalDelay =\n      Number(refs.delay.value) + Number(refs.step.value) * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay)\n        .then(({ position, delay }) =>\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}`\n          )\n        )\n        .catch(({ position, delay }) =>\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}`)\n        );\n    }, totalDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise(resolve({ position, delay }));\n  } else {\n    // Reject\n    return new Promise(reject({ position, delay }));\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","createPromisesBtn","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","event","Number","value","console","log","currentTarget","preventDefault","i","totalDelay","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e366cca1.js.map"}