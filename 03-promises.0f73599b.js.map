{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,kBAAmBL,SAASC,cAAc,oBAG5CK,QAAQC,IAAIT,EAAKM,QAEjBN,EAAKC,KAAKS,iBAAiB,UAE3B,SAAsBC,G,kBAIlB,IAAIC,EACFC,OAAOb,EAAKI,MAAMU,OAASD,OAAOb,EAAKK,KAAKS,QAAUC,EAAI,GAC5DC,YAAW,WAMf,IAAuBC,EAAUb,EAAVa,EALHF,EAKaX,EALVQ,EAMCM,KAAKC,SAAW,GAG7B,IAAIC,SAAQ,SAAAC,GACjBC,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANrB,G,IAI3D,IAAIgB,SAAQ,SAAAM,GACjBJ,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAqCF,OAAfR,EAAS,QAAYQ,OAANrB,G,MAd5DQ,E,EAPCN,EAASO,OAAOb,EAAKM,OAAOQ,OAClCH,EAAMiB,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKvB,EAAQuB,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  createPromisesBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nconsole.log(refs.amount);\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  const amount = Number(refs.amount.value);\n  event.preventDefault();\n  for (let i = 1; i <= amount; i++) {\n    let totalDelay =\n      Number(refs.delay.value) + Number(refs.step.value) * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay);\n    }, totalDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}`);\n    });\n  } else {\n    // Reject\n    return new Promise(reject => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}`);\n    });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","createPromisesBtn","console","log","addEventListener","event","totalDelay","Number","value","i","setTimeout","position","Math","random","Promise","resolve","$parcel$interopDefault","Notify","success","concat","reject","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.0f73599b.js.map"}